diff -urN a/customise.py b/customise.py
--- a/customise.py	2011-04-12 20:27:06.000000000 -0500
+++ b/customise.py	2011-12-22 08:08:17.925139573 -0600
@@ -20,6 +20,9 @@
 
 _filename = os.path.basename(sys.argv[0])
 _curdir = os.path.dirname(os.path.realpath(sys.argv[0]))
+_themename = "A-New-Hope"
+_themedir = os.path.expanduser("~/.themes")
+_systhemedir = "/usr/share/themes"
 
 # GLOBALS
 panel_type = 1
@@ -106,52 +109,76 @@
 
 # SAVE BUTTON CLICKED		
 	def on_save_clicked(self, widget, data=None):
+	# COPY THEME
+		userdir = '%s/%s' % (_themedir, _themename)
+		sysdir = '%s/%s' % (_systhemedir, _themename)
+
+		if os.path.exists(userdir):
+			print "Removing %s" % userdir
+			shutil.rmtree(userdir)
+
+		if not os.path.exists(_themedir):
+			os.mkdir(_themedir)
+		os.mkdir(userdir)
+
+		shutil.copy("%s/index.theme" % sysdir, userdir)
+		os.symlink("%s/metacity-1" % sysdir, "%s/metacity-1" % userdir)
+
+		usergtkdir = "%s/gtk-2.0" % userdir
+		sysgtkdir = "%s/gtk-2.0" % sysdir
+		gtklinks = ["Arrows", "Breadcrumbs", "Notebook", "Toolbar"]
+		os.mkdir(usergtkdir)
+		shutil.copy("%s/gtkrc" % sysgtkdir, usergtkdir)
+		shutil.copytree("%s/Styles" % sysgtkdir, "%s/Styles" % usergtkdir)
+		for link in gtklinks:
+			os.symlink("%s/%s" % (sysgtkdir, link), "%s/%s" % (usergtkdir, link))
+
 	# PANEL TYPE
 		if panel_type == 1 :
-			os.system("cp --force gtk-2.0/Styles/RES/panel-sunken.rc gtk-2.0/Styles/panel.rc")
+			os.system("cp --force %s/gtk-2.0/Styles/RES/panel-sunken.rc %s/gtk-2.0/Styles/panel.rc" % (sysdir, userdir))
 		elif panel_type == 2 :
-			os.system("cp --force gtk-2.0/Styles/RES/panel-raised.rc gtk-2.0/Styles/panel.rc")
+			os.system("cp --force %s/gtk-2.0/Styles/RES/panel-raised.rc %s/gtk-2.0/Styles/panel.rc" % (sysdir, userdir))
 		elif panel_type == 3 :
-			os.system("cp --force gtk-2.0/Styles/RES/panel-light.rc gtk-2.0/Styles/panel.rc")
+			os.system("cp --force %s/gtk-2.0/Styles/RES/panel-light.rc %s/gtk-2.0/Styles/panel.rc" % (sysdir, userdir))
 	# TAB TYPE
 		if tab_type == 1 :
-			os.system("cp --force gtk-2.0/Styles/RES/notebook-light.rc gtk-2.0/Styles/notebook.rc")
+			os.system("cp --force %s/gtk-2.0/Styles/RES/notebook-light.rc %s/gtk-2.0/Styles/notebook.rc" % (sysdir, userdir))
 		elif tab_type == 2 :
-			os.system("cp --force gtk-2.0/Styles/RES/notebook-dark.rc gtk-2.0/Styles/notebook.rc")
+			os.system("cp --force %s/gtk-2.0/Styles/RES/notebook-dark.rc %s/gtk-2.0/Styles/notebook.rc" % (sysdir, userdir))
 		elif tab_type == 3 :
-			os.system("cp --force gtk-2.0/Styles/RES/notebook-pixmap.rc gtk-2.0/Styles/notebook.rc")
+			os.system("cp --force %s/gtk-2.0/Styles/RES/notebook-pixmap.rc %s/gtk-2.0/Styles/notebook.rc" % (sysdir, userdir))
 
 	# SCROLLBAR TYPE
 		if scrollbar_type == 1 :
-			os.system("cp --force gtk-2.0/Styles/RES/scrollbar-light.rc gtk-2.0/Styles/scrollbar.rc")
+			os.system("cp --force %s/gtk-2.0/Styles/RES/scrollbar-light.rc %s/gtk-2.0/Styles/scrollbar.rc" % (sysdir, userdir))
 		elif scrollbar_type == 2 :
-			os.system("cp --force gtk-2.0/Styles/RES/scrollbar-dark.rc gtk-2.0/Styles/scrollbar.rc")
+			os.system("cp --force %s/gtk-2.0/Styles/RES/scrollbar-dark.rc %s/gtk-2.0/Styles/scrollbar.rc" % (sysdir, userdir))
 
 	# NAUTILUS TYPE
 		if nautilus_type == 1 :
-			os.system("cp --force gtk-2.0/Styles/RES/toolbar-dark.rc gtk-2.0/Styles/toolbar.rc")
-			os.system("cp --force gtk-2.0/Styles/RES/nautilus-ANH.rc gtk-2.0/Styles/nautilus.rc")
-			os.system("cp --force gtk-2.0/Styles/RES/breadcrumbs-dark.rc gtk-2.0/Styles/breadcrumbs.rc")
+			os.system("cp --force %s/gtk-2.0/Styles/RES/toolbar-dark.rc %s/gtk-2.0/Styles/toolbar.rc" % (sysdir, userdir))
+			os.system("cp --force %s/gtk-2.0/Styles/RES/nautilus-ANH.rc %s/gtk-2.0/Styles/nautilus.rc" % (sysdir, userdir))
+			os.system("cp --force %s/gtk-2.0/Styles/RES/breadcrumbs-dark.rc %s/gtk-2.0/Styles/breadcrumbs.rc" % (sysdir, userdir))
 		elif nautilus_type == 2 :
-			os.system("cp --force gtk-2.0/Styles/RES/toolbar-dark.rc gtk-2.0/Styles/toolbar.rc")
-			os.system("cp --force gtk-2.0/Styles/RES/nautilus-TESB.rc gtk-2.0/Styles/nautilus.rc")
-			os.system("cp --force gtk-2.0/Styles/RES/breadcrumbs-dark.rc gtk-2.0/Styles/breadcrumbs.rc")
+			os.system("cp --force %s/gtk-2.0/Styles/RES/toolbar-dark.rc %s/gtk-2.0/Styles/toolbar.rc" % (sysdir, userdir))
+			os.system("cp --force %s/gtk-2.0/Styles/RES/nautilus-TESB.rc %s/gtk-2.0/Styles/nautilus.rc" % (sysdir, userdir))
+			os.system("cp --force %s/gtk-2.0/Styles/RES/breadcrumbs-dark.rc %s/gtk-2.0/Styles/breadcrumbs.rc" % (sysdir, userdir))
 		elif nautilus_type == 3 :
-			os.system("cp --force gtk-2.0/Styles/RES/toolbar-light.rc gtk-2.0/Styles/toolbar.rc")
-			os.system("cp --force gtk-2.0/Styles/RES/nautilus-ROTJ.rc gtk-2.0/Styles/nautilus.rc")
-			os.system("cp --force gtk-2.0/Styles/RES/breadcrumbs-light.rc gtk-2.0/Styles/breadcrumbs.rc")
+			os.system("cp --force %s/gtk-2.0/Styles/RES/toolbar-light.rc %s/gtk-2.0/Styles/toolbar.rc" % (sysdir, userdir))
+			os.system("cp --force %s/gtk-2.0/Styles/RES/nautilus-ROTJ.rc %s/gtk-2.0/Styles/nautilus.rc" % (sysdir, userdir))
+			os.system("cp --force %s/gtk-2.0/Styles/RES/breadcrumbs-light.rc %s/gtk-2.0/Styles/breadcrumbs.rc" % (sysdir, userdir))
 
 	# ELEMENTARY OR GTK BREADCRUMBS CHECK
 		if gtk_breadcrumbs_check :
-			os.system("cp --force gtk-2.0/Styles/RES/null.rc gtk-2.0/Styles/breadcrumbs.rc")
+			os.system("cp --force %s/gtk-2.0/Styles/RES/null.rc %s/gtk-2.0/Styles/breadcrumbs.rc" % (sysdir, userdir))
 
 	# MENU TYPE
 		if menu_type == 1 :
-			os.system("cp --force gtk-2.0/Styles/RES/menu-round.rc gtk-2.0/Styles/menu.rc")
+			os.system("cp --force %s/gtk-2.0/Styles/RES/menu-round.rc %s/gtk-2.0/Styles/menu.rc" % (sysdir, userdir))
 		elif menu_type == 2 :
-			os.system("cp --force gtk-2.0/Styles/RES/menu-lessround.rc gtk-2.0/Styles/menu.rc")
+			os.system("cp --force %s/gtk-2.0/Styles/RES/menu-lessround.rc %s/gtk-2.0/Styles/menu.rc" % (sysdir, userdir))
 		elif menu_type == 3 :
-			os.system("cp --force gtk-2.0/Styles/RES/menu-raised.rc gtk-2.0/Styles/menu.rc")
+			os.system("cp --force %s/gtk-2.0/Styles/RES/menu-raised.rc %s/gtk-2.0/Styles/menu.rc" % (sysdir, userdir))
 
 		save_dialog = self.builder.get_object("SettingsSavedDialog")
 		save_dialog.show()
